import uuid from 'react-uuid';

export const navItems = [
  {
    id: uuid(),
    title: 'Ensure image pinned version',
    slug: '/built-in-rules/ensure-image-pinned-version',
    isEnabledByDefault: true,
    isContainer: true,
  },
  {
    id: uuid(),
    title: 'Ensure each container has a configured memory request',
    slug: '/built-in-rules/ensure-memory-request',
    isEnabledByDefault: true,
    isContainer: true,
  },
  {
    id: uuid(),
    title: 'Ensure each container has a configured CPU request',
    slug: '/built-in-rules/ensure-cpu-request',
    isEnabledByDefault: true,
    isContainer: true,
  },
  {
    id: uuid(),
    title: 'Ensure each container has a configured memory limit',
    slug: '/built-in-rules/ensure-memory-limit',
    isEnabledByDefault: true,
    isContainer: true,
  },

  {
    id: uuid(),
    title: 'Ensure each container has a configured CPU limit',
    slug: '/built-in-rules/ensure-cpu-limit',
    isEnabledByDefault: true,
    isContainer: true,
  },
  {
    id: uuid(),
    title: 'Ensure each container has a configured liveness probe',
    slug: '/built-in-rules/ensure-liveness-probe',
    isEnabledByDefault: true,
    isContainer: true,
  },
  {
    id: uuid(),
    title: 'Ensure each container has a configured readiness probe',
    slug: '/built-in-rules/ensure-readiness-probe',
    isEnabledByDefault: true,
    isContainer: true,
  },
  {
    id: uuid(),
    title: 'Prevent containers from having root access capabilities',
    slug: '/built-in-rules/prevent-privileged-containers',
    isEnabledByDefault: false,
    isContainer: true,
  },
  {
    id: uuid(),
    title: 'Ensure each container has a configured CPU request',
    slug: '/built-in-rules/ensure-digest-tag',
    isEnabledByDefault: false,
    isContainer: true,
  },
  {
    id: uuid(),
    title: "Prevent containers from sharing the host's PID namespace",
    slug: '/built-in-rules/prevent-using-host-pid',
    isEnabledByDefault: false,
    isContainer: true,
  },
  {
    id: uuid(),
    title: "Prevent containers from sharing the host's network namespace",
    slug: '/built-in-rules/prevent-using-host-ipc',
    isEnabledByDefault: false,
    isContainer: true,
  },
  {
    id: uuid(),
    title: 'Prevent containers from accessing host files by using high UIDs',
    slug: '/built-in-rules/prevent-uid-conflicts',
    isEnabledByDefault: false,
    isContainer: true,
  },
  {
    id: uuid(),
    title: 'Prevent containers from mounting Docker socket',
    slug: '/built-in-rules/prevent-mounting-docker-socket',
    isEnabledByDefault: false,
    isContainer: true,
  },
  // workload
  {
    id: uuid(),
    title: 'Ensure workload has valid label values',
    slug: '/built-in-rules/ensure-labels-value-valid',
    isEnabledByDefault: true,
    isWorkload: true,
  },
  {
    id: uuid(),
    title: 'Ensure deployment-like resource is using a valid restart policy',
    slug: '/built-in-rules/ensure-valid-restart-policy',
    isEnabledByDefault: true,
    isWorkload: true,
  },
  {
    id: uuid(),
    title: 'Prevent workload from using the default namespace',
    slug: '/built-in-rules/prevent-deafult-namespce',
    isEnabledByDefault: true,
    isWorkload: true,
  },
  {
    id: uuid(),
    title: 'Ensure Deployment has more than one replica configured',
    slug: '/built-in-rules/ensure-minimum-two-replicas',
    isEnabledByDefault: true,
    isWorkload: true,
  },
  {
    id: uuid(),
    title: 'Ensure workload has a configured `owner` label',
    slug: '/built-in-rules/ensure-owner-label',
    isEnabledByDefault: false,
    isWorkload: true,
  },
  {
    id: uuid(),
    title: 'Ensure workload has valid label values',
    slug: '/built-in-rules/ensure-env-label',
    isEnabledByDefault: false,
    isWorkload: true,
  },
  //CronJob
  {
    id: uuid(),
    title: 'Ensure CronJob scheduler is valid',
    slug: '/built-in-rules/ensure-cronjob-scheduler-valid',
    isEnabledByDefault: false,
    isCronJob: true,
  },
  {
    id: uuid(),
    title: 'Ensure CronJob has a configured deadline',
    slug: '/built-in-rules/ensure-cronjob-deadline',
    isEnabledByDefault: false,
    isCronJob: true,
  },
  {
    id: uuid(),
    title: 'Prevent CronJob from executing jobs concurrency',
    slug: '/built-in-rules/prevent-cronjob-concurrency',
    isEnabledByDefault: false,
    isCronJob: true,
  },
  // Networking
  {
    id: uuid(),
    title: 'Prevent Ingress from forwarding all traffic to a single container',
    slug: '/built-in-rules/prevent-ingress-forwarding-traffic-to-single-container',
    isEnabledByDefault: true,
    isNetworking: true,
  },
  {
    id: uuid(),
    title: 'Prevent Service from exposing node port',
    slug: '/built-in-rules/prevent-node-port',
    isEnabledByDefault: true,
    isNetworking: true,
  },
  // Security
  {
    id: uuid(),
    title:
      'Prevent EndpointSlice validation from enabling host network hijack (CVE-2021-25737)',
    slug: '/built-in-rules/prevent-endpointslice-validation-from-enabling-host-network-hijack-cve-2021-25737',
    isEnabledByDefault: false,
    isSecurity: true,
  },
  {
    id: uuid(),
    title: 'Prevent container security vulnerability (CVE-2021-25741)',
    slug: '/built-in-rules/prevent-container-security-vulnerability-cve-2021-25741',
    isEnabledByDefault: false,
    isSecurity: true,
  },
  {
    id: uuid(),
    title: 'Prevent Ingress security vulnerability (CVE-2021-25742)',
    slug: '/built-in-rules/prevent-ingress-security-vulnerability-cve-2021-25742',
    isEnabledByDefault: false,
    isSecurity: true,
  },
  {
    id: uuid(),
    title: 'Prevent ConfigMap security vulnerability (CVE-2021-25742)',
    slug: '/built-in-rules/prevent-configmap-security-vulnerability-cve-2021-25742',
    isEnabledByDefault: false,
    isSecurity: true,
  },
  // Deprecation
  {
    id: uuid(),
    title: 'Prevent deprecated APIs in Kubernetes v1.16',
    slug: '/built-in-rules/prevent-deprecated-k8s-api-116',
    isEnabledByDefault: false,
    isDeprecation: true,
  },
  {
    id: uuid(),
    title: 'Prevent deprecated APIs in Kubernetes v1.17',
    slug: '/built-in-rules/prevent-deprecated-k8s-api-117',
    isEnabledByDefault: false,
    isDeprecation: true,
  },
  // Argo
  {
    id: uuid(),
    title: 'Ensure Workflow DAG fail-fast on node failure',
    slug: '/built-in-rules/ensure-workflow-dag-fail-fast-on-node-failure',
    isEnabledByDefault: true,
    isArgo: true,
  },
  {
    id: uuid(),
    title: 'Prevent Workflow pods from using the default service account',
    slug: '/built-in-rules/prevent-workflow-pods-from-using-the-default-service-account',
    isEnabledByDefault: true,
    isArgo: true,
  },
  {
    id: uuid(),
    title: 'Ensure ConfigMap is recognized by ArgoCD',
    slug: '/built-in-rules/ensure-configmap-is-recognized-by-argocd',
    isEnabledByDefault: true,
    isArgo: true,
  },
  {
    id: uuid(),
    title: 'Ensure Rollout pause step has a configured duration',
    slug: '/built-in-rules/ensure-rollout-pause-step-has-a-configured-duration',
    isEnabledByDefault: true,
    isArgo: true,
  },
  {
    id: uuid(),
    title: 'Ensure Application and AppProject are part of the argocd namespace',
    slug: '/built-in-rules/ensure-application-and-appproject-are-part-of-the-argocd-namespace',
    isEnabledByDefault: true,
    isArgo: true,
  },
  {
    id: uuid(),
    title: 'Prevent Workflow from having an empty retry strategy',
    slug: '/built-in-rules/prevent-workflow-from-having-an-empty-retry-strategy',
    isEnabledByDefault: true,
    isArgo: true,
  },
  {
    id: uuid(),
    title: 'Ensure Rollout has revision history set',
    slug: '/built-in-rules/ensure-rollout-has-revision-history-set',
    isEnabledByDefault: true,
    isArgo: true,
  },
  {
    id: uuid(),
    title: 'Ensure Rollout allows broadcasting IP table changes',
    slug: '/built-in-rules/ensure-rollout-allows-broadcasting-ip-table-changes',
    isEnabledByDefault: true,
    isArgo: true,
  },
  {
    id: uuid(),
    title: 'Ensure Rollout that is marked as degraded scales down ReplicaSet',
    slug: '/built-in-rules/ensure-rollout-that-is-marked-as-degraded-scales-down-replicaset',
    isEnabledByDefault: true,
    isArgo: true,
  },
  {
    id: uuid(),
    title: 'Ensure Workflow retry policy catches relevant errors only',
    slug: '/built-in-rules/ensure-workflow-retry-policy-catches-relevant-errors-only',
    isEnabledByDefault: true,
    isArgo: true,
  },
  // other
  {
    id: uuid(),
    title: 'Ensure HPA has minimum replicas configured',
    slug: '/built-in-rules/ensure-hpa-minimum-replicas',
    isEnabledByDefault: true,
    isOther: true,
  },
  {
    id: uuid(),
    title: 'Ensure HPA has maximum replicas configured',
    slug: '/built-in-rules/ensure-hpa-maximum-replicas',
    isEnabledByDefault: true,
    isOther: true,
  },
  {
    id: uuid(),
    title: 'Prevent deploying naked pods',
    slug: '/built-in-rules/prevent-naked-pods',
    isEnabledByDefault: false,
    isOther: true,
  },
];
